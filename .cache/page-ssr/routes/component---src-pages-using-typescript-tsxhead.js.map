{"version":3,"file":"component---src-pages-using-typescript-tsxhead.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/Header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nconst Header = () => (\n  <section className=\"absolute w-full z-30 text-white\">\n    <nav className=\"flex flex-col justify-between items-center p-6 sm:flex-row\">\n      <Link to=\"/\" className=\"text-4xl font-bold\"></Link>\n      <ul className=\"flex gap-2 text-sm font-bold pt-6 sm:pt-0 sm:gap-4 sm:text-lg\">\n        <li>\n          <Link\n            to=\"/\"\n            className=\"rounded px-1 py-1 hover:bg-slate-200 hover:bg-opacity-10 duration-100 ease-in\"\n          >\n            info1\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"rounded px-1 py-1 hover:bg-slate-200 hover:bg-opacity-10 duration-100 ease-in\"\n          >\n            info2\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"rounded px-1 py-1 hover:bg-slate-200 hover:bg-opacity-10 duration-100 ease-in\"\n          >\n            info3\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"rounded px-1 py-1 hover:bg-slate-200 hover:bg-opacity-10 duration-100 ease-in\"\n          >\n            info4\n          </Link>\n        </li>\n      </ul>\n\n      <ul className=\"flex gap-2 text-sm font-bold pt-6 sm:pt-0 sm:gap-4 sm:text-lg\">\n        <li>\n          {\" \"}\n          <Link\n            to=\"/\"\n            className=\"rounded-full px-6 py-2 hover:bg-slate-200 hover:bg-opacity-10 duration-100 ease-in\"\n          >\n            testage1\n          </Link>\n        </li>\n        <li>\n          {\" \"}\n          <Link\n            to=\"/\"\n            className=\"text-black bg-gradient-to-tr from-[#30F9FC] to-lime-300 rounded-full px-6 py-2 hover:brightness-90 duration-200 ease-in-out\"\n          >\n            testage2\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </section>\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\n\nimport Header from \"./Header\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","location","pathname","site","buildTime","href","to","Head","title","query","Header","children","description","metaDescription","siteMetadata","defaultTitle","author"],"sourceRoot":""}