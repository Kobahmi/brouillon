{"version":3,"file":"component---src-pages-index-js-7bf69ad80e429ec038a5.js","mappings":"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","sources":["webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/Divider.js","webpack://gatsby-starter-default/./src/components/Dividerleft.js","webpack://gatsby-starter-default/./src/components/Dividerlefttwo.js","webpack://gatsby-starter-default/./src/components/Dividerright.js","webpack://gatsby-starter-default/./src/components/Dividerrightthree.js","webpack://gatsby-starter-default/./src/components/Dividerrighttwo.js","webpack://gatsby-starter-default/./src/components/Experience.js","webpack://gatsby-starter-default/./src/components/Hero.js","webpack://gatsby-starter-default/./src/components/Integration.js","webpack://gatsby-starter-default/./src/components/Integre.js","webpack://gatsby-starter-default/./src/components/Produits.js","webpack://gatsby-starter-default/./src/components/Rapide.js","webpack://gatsby-starter-default/./src/components/Syndication.js","webpack://gatsby-starter-default/./src/components/Automatisation.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\";\n\nconst Divider = () => {\n  return (\n    <div className=\"w-0 h-0 border-r-[100vw] border-r-[#30F9FC] border-b-[10vw] border-b-neutral-900\"></div>\n  );\n};\n\nexport default Divider;\n","import React from \"react\";\n\nconst Dividerleft = () => {\n  return (\n    <div className=\"w-0 h-0 border-l-[100vw] border-l-neutral-900 border-b-[10vw] border-b-black \"></div>\n  );\n};\n\nexport default Dividerleft;\n","import React from \"react\";\n\nconst Dividerlefttwo = () => {\n  return (\n    <div className=\"w-0 h-0 border-l-[100vw] border-l-white border-b-[10vw] border-b-black \"></div>\n  );\n};\n\nexport default Dividerlefttwo;\n","import React from \"react\";\n\nconst Dividerright = () => {\n  return (\n    <div className=\"w-0 h-0 border-r-[100vw] border-r-black border-b-[10vw] border-b-white \"></div>\n  );\n};\n\nexport default Dividerright;\n","import React from \"react\";\n\nconst Dividerrightthree = () => {\n  return (\n    <div className=\"w-0 h-0 border-l-[100vw] border-l-[#30F9FC] border-b-[10vw] border-b-white\"></div>\n  );\n};\n\nexport default Dividerrightthree;\n","import React from \"react\";\n\nconst Dividerrighttwo = () => {\n  return (\n    <div className=\"w-0 h-0 border-r-[100vw] border-r-black border-b-[10vw] border-b-lime-300\"></div>\n  );\n};\n\nexport default Dividerrighttwo;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Experience = () => {\n  return (\n    <section className=\"bg-white pt-6 pb-[8.5rem]\">\n      <div className=\"flex flex-col items-center text-neutral-700\">\n        <div className=\"flex flex-col justify-center items-center text-center px-6\">\n          <h1 className=\"flex flex-col text-2xl font-bold  md:text-5xl lg:text-6xl\">\n            <span className=\"pt-2 bg-clip-text text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n              UNE EXPÉRIENCE OPTIMISÉE\n            </span>\n          </h1>\n          <p className=\" pt-2\">POUR VOUS ET VOS CLIENTS</p>\n          <p className=\" text-sm max-w-[30rem] py-10 \">\n            A small team of people driven by performance and excellence. Lorem\n            ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\n            Suspendisse lectus tortor, dignissim sit amet, adipiscing nec,\n            ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula\n            massa, varius a, semper congue, euismod non, mi.\n          </p>\n\n          <div className=\"rounded-xl mb-6 bg-gray-300 h-[2px] max-w-[30rem] w-full \"></div>\n\n          <Link\n            to=\"/\"\n            className=\"flex group btn items-center text-neutral-700 border-[1px] border-neutral-700 rounded-full transition duration-300 ease-in-out hover:bg-neutral-700 hover:text-white\"\n          >\n            <span className=\" px-4 py-2  font-bold \">COMMENCER</span>\n            <svg\n              viewBox=\"0 0 46 16\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              id=\"arrow-horizontal\"\n              className=\"-translate-x-2 h-[10px] w-[30px] fill-neutral-700 transition-all duration-300 ease-out group-hover:scale-x-105 group-hover:fill-white\"\n            >\n              <path\n                transform=\"translate(30)\"\n                d=\"M8,0,6.545,1.455l5.506,5.506H-30V9.039H12.052L6.545,14.545,8,16l8-8Z\"\n                data-name=\"Path 10\"\n              ></path>\n            </svg>\n          </Link>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div data-aos=\"fade-right\" data-aos-duration=\"1000\">\n            <StaticImage src=\"../images/Images1-min.svg\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              DES SITES WEB ULTRA RAPIDES\n            </h2>\n            <p>\n              Avec l'utilisation des dernières technologies pour offrir des\n              sites web ultra rapides.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"1000\"\n            className=\"lg:order-2\"\n          >\n            <StaticImage src=\"../images/Images2-min.svg\" alt=\"travail\" />\n          </div>\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6 lg:order-1 md:border-l-0 md:border-r-2 md:pl-0 md:pr-10\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              PLATEFORME (CMS)FACILE À UTILISER\n            </h2>\n            <p>\n              Pour l'intégration de contenus personnalisés sur le site Web\n              (article de blogue, landing pages, promotions du mois, textes SEO\n              et plus).\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div data-aos=\"fade-right\" data-aos-duration=\"1000\">\n            <StaticImage src=\"../images/Images3-min.svg\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              DEMANDES WEB DE QUALITÉ (LEADS)\n            </h2>\n            <p>\n              Offrant un taux de conversion plus élevé et un coût d'acquisition\n              plus bas.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"1000\"\n            className=\"lg:order-2\"\n          >\n            <StaticImage src=\"../images/Imags-min.svg\" alt=\"travail\" />\n          </div>\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6 lg:order-1 md:border-l-0 md:border-r-2 md:pl-0 md:pr-10\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              CONCEPTION GRAPHIQUE ET EXPÉRIENCE EN LIGNE OPTIMALE\n            </h2>\n            <p>Pour faciliter la navigation.</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div data-aos=\"fade-right\" data-aos-duration=\"1000\">\n            <StaticImage src=\"../images/Images4-min.svg\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              MISES A JOUR AUTOMATISÉE DES PROGRAMMES ET PROMOTIONS\n            </h2>\n            <p>Des manifacturiers.</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"1000\"\n            className=\"lg:order-2\"\n          >\n            <StaticImage src=\"../images/Images5-min.svg\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col max-w-[25rem] gap-4 border-gray-300 border-solid border-l-2 pl-10 py-6 lg:order-1 md:border-l-0 md:border-r-2 md:pl-0 md:pr-10\">\n            <h2 className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n              OPTIMISATION SEO\n            </h2>\n            <p>\n              Incluant la gestion de la taille des images, des balises, des\n              donnees structurées, des sitemaps, etc.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Hero = () => {\n  return (\n    <section className=\"bg-gradient-to-t from-[#30F9FC] to-lime-300\">\n      <div className=\"flex flex-col h-full max-w-[1280px] mx-auto px-6 gap-2 pt-8 lg:pt-16 lg:flex-row lg:items-center\">\n        <div className=\"flex flex-col justify-center items-center text-center lg:items-start lg:text-start\">\n          <h1 className=\"flex flex-col z-20 text-neutral-700 text-2xl font-bold  md:text-5xl lg:text-6xl\">\n            <span>DES SITES WEB</span>\n            <span className=\"whitespace-nowrap\">DE CONCESSIONAIRES</span>\n          </h1>\n          <p className=\"text-neutral-700 text-lg z-20 pt-3\">\n            CONÇUS POUR GÉNÉRER DES LEADS DE QUALITÉ\n          </p>\n\n          <Link className=\"mt-10\" to=\"/demo\">\n            <span className=\"px-4 py-3 border-neutral-700 border-[1px] rounded-full font-bold text-neutral-700 transition duration-300 ease-in-out hover:bg-neutral-700 hover:text-white\">\n              DEMANDER UNE DÉMO\n            </span>\n          </Link>\n        </div>\n\n        <div className=\"relative mt-[1rem] lg:ml-[-18rem]\">\n          <div data-aos=\"fade-up\" data-aos-duration=\"2000\" className=\"absolute\">\n            <StaticImage\n              src=\"../images/stars.webp\"\n              alt=\"stars\"\n              loading=\"eager\"\n            />\n          </div>\n          <StaticImage\n            src=\"../images/Images-min.svg\"\n            alt=\"stock\"\n            loading=\"eager\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Integration = () => {\n  return (\n    <section className=\"bg-black relative z-0 py-6\">\n      <div className=\"flex flex-col  max-w-7xl mx-auto\">\n        <h1\n          data-aos=\"fade-up\"\n          className=\"text-center py-6 text-2xl font-bold  md:text-5xl lg:text-6xl\"\n        >\n          <span className=\"bg-clip-text py-2 text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n            INTÉGRATION\n          </span>\n        </h1>\n        <div className=\"flex flex-col gap-10 items-center p-10 lg:flex-row\">\n          <div className=\"relative\">\n            <div data-aos=\"fade-in\" data-aos-duration=\"1500\">\n              <div className=\"absolute -z-10 translate-y-[1rem] translate-x-[-1rem] h-full w-full bg-gradient-to-t from-[#30F9FC] to-lime-300\"></div>\n            </div>\n\n            <StaticImage src=\"../images/auto.webp\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col gap-4 py-6 md:pl-10 md:border-gray-700 md:border-solid md:border-l-2\">\n            <h2 className=\"flex flex-col\">\n              <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300 text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n                INTÉGRATION\n              </span>\n              <span className=\"font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n                AVEC LES MEILLEURES PLATEFORMES\n              </span>\n            </h2>\n            <p className=\" text-white\">\n              Notre portfolio inclus déjà plusieurs marques de véhicules neufs:\n            </p>\n\n            <ul className=\"list-disc text-white font-bold ml-6\">\n              <li>Hyundai</li>\n              <li>Kia</li>\n              <li>Nissan</li>\n              <li>Mazda</li>\n              <li>Subaru</li>\n              <li>Mitsubishi</li>\n              <li>Infiniti</li>\n            </ul>\n\n            <p className=\" text-white\">\n              Et plusieurs autres marques en développement.\n            </p>\n\n            <Link className=\"mt-10\" to=\"/demo\">\n              <span className=\" border-[1px] px-4 py-3 border-white rounded-full font-bold text-white transition duration-300 ease-in-out hover:bg-white hover:text-black\">\n                DEMANDER UNE DÉMO\n              </span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Integration;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Integre = () => {\n  return (\n    <section className=\"bg-black p-4 relative z-30\">\n      <div className=\"flex flex-col items-center gap-6 max-w-7xl mx-auto\">\n        <h1\n          data-aos=\"fade-up\"\n          className=\"text-center py-6 text-2xl font-bold md:text-5xl lg:text-6xl\"\n        >\n          <span className=\"bg-clip-text py-2 text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n            INTÉGRÉ AVEC VOS OUTILS\n          </span>\n        </h1>\n        <p className=\"text-white max-w-xl mx-auto text-center\">\n          Notre plateforme se connecte aux differents API et sources de données\n          que vous avez en place. DMS, CRM, Évaluateur, Syndication, etc.\n        </p>\n        <p className=\"text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300 max-w-xl mx-auto text-center\">\n          POUR VOUS ET VOS CLIENTS\n        </p>\n        <div className=\"py-6\">\n          <StaticImage src=\"../images/Logo2.webp\" alt=\"logo\" />\n        </div>\n        <p className=\"bg-clip-text text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300 mx-auto text-center\">\n          Vous ne trouvez pas votre CRM? Écrivez-nous et nous vous contacterons!\n        </p>\n\n        <Link\n          to=\"/\"\n          className=\"flex group mt-6 btn items-center text-white border-[1px] border-white rounded-full transition duration-300 ease-in-out hover:bg-white hover:text-black\"\n        >\n          <span className=\" px-4 py-2  font-bold \">COMMENCER</span>\n          <svg\n            viewBox=\"0 0 46 16\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"-translate-x-2 h-[10px] w-[30px] fill-white transition-all duration-300 ease-out group-hover:scale-x-105 group-hover:fill-black\"\n          >\n            <path\n              transform=\"translate(30)\"\n              d=\"M8,0,6.545,1.455l5.506,5.506H-30V9.039H12.052L6.545,14.545,8,16l8-8Z\"\n              data-name=\"Path 10\"\n            ></path>\n          </svg>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Integre;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Produits = () => {\n  return (\n    <section className=\"bg-neutral-900\">\n      <div className=\"flex flex-col px-6 py-6 max-w-7xl mx-auto\">\n        <h1\n          data-aos=\"fade-up\"\n          className=\"text-center py-16 text-2xl font-bold md:text-5xl lg:text-6xl\"\n        >\n          <span className=\"bg-clip-text py-2 text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n            PRODUITS\n          </span>\n        </h1>\n\n        <ul className=\"text-white grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n          <li className=\"border-gray-700 border-solid border-l-2 px-6 py-4\">\n            <div data-aos=\"fade-left\">\n              <StaticImage src=\"../images/Icons-min.svg\" alt=\"icon1\" />\n            </div>\n            <h2 className=\"font-bold py-3\">\n              SITES WEB DE CONCESSIONAIRES AUTOS\n            </h2>\n            <p className=\"text-sm\">Suivant les normes des manifacturiers</p>\n          </li>\n\n          <li className=\"border-gray-700 border-solid border-l-2 px-6 py-4\">\n            <div data-aos=\"fade-left\" data-aos-delay=\"50\">\n              <StaticImage src=\"../images/Icons2-min.svg\" alt=\"icon2\" />\n            </div>\n            <h2 className=\"font-bold py-3\">MODULE D'ACHAT EN LIGNE COMPLET</h2>\n            <p className=\"text-sm\">\n              Incluant les accessoires, garanties, assurances et dépots\n            </p>\n          </li>\n\n          <li className=\"border-gray-700 border-solid border-l-2 px-6 py-4\">\n            <div data-aos=\"fade-left\" data-aos-delay=\"100\">\n              <StaticImage src=\"../images/Icons3-min.svg\" alt=\"icon3\" />\n            </div>\n            <h2 className=\"font-bold py-3\">\n              GESTIONNAIRE D'INVENTAIRE D'OCCASIONS\n            </h2>\n            <p className=\"text-sm\">\n              (Eval Auto) Incluant la syndication vers les plateformes les plus\n              populaires (Kijiji, Cargurus, Otogo, AutoTraders, etc)\n            </p>\n          </li>\n\n          <li className=\"border-gray-700 border-solid border-l-2 px-6 py-4\">\n            <div data-aos=\"fade-left\" data-aos-delay=\"150\">\n              <StaticImage src=\"../images/Icons4-min.svg\" alt=\"icon4\" />\n            </div>\n            <h2 className=\"font-bold py-3\">\n              MODULE DE PUBLICATION AUTOMATISEE\n            </h2>\n            <p className=\"text-sm\">\n              Sur Facebook (Carrousel et Marketplace) et Google (Merchant\n              center) pour véhicules d'occasion.\n            </p>\n          </li>\n\n          <li className=\"border-gray-700 border-solid border-l-2 px-6 py-4\">\n            <div data-aos=\"fade-left\" data-aos-delay=\"200\">\n              <StaticImage src=\"../images/Icons5-min.svg\" alt=\"icon5\" />\n            </div>\n            <h2 className=\"font-bold py-3\">SITES WEB D'OCCASIONS</h2>\n            <p className=\"text-sm\">\n              De style marketplace réunissant l'inventaire de plusieurs\n              concessions dans un même site. Stratégie incontournable pour les\n              groupes automobiles.\n            </p>\n          </li>\n        </ul>\n        <Link className=\"mt-12 mx-auto\" to=\"/demo\">\n          <span className=\"border-[1px] px-4 py-3 border-white rounded-full font-bold text-white transition duration-300 ease-in-out hover:bg-white hover:text-black\">\n            DEMANDER UNE DÉMO\n          </span>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Produits;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Rapide = () => {\n  return (\n    <section className=\"bg-neutral-900 pt-2\">\n      <div className=\"flex justify-center items-center h-full\">\n        <div className=\"flex flex-col justify-center items-center px-6 text-center\">\n          <div>\n            <h1 className=\"flex flex-col z-20 text-2xl font-bold md:text-5xl lg:text-6xl\">\n              <span className=\"text-lime-300\">DES APPLICATIONS WEB</span>\n              <span className=\"bg-clip-text whitespace-nowrap text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n                ULTRA RAPIDES\n              </span>\n            </h1>\n            <p className=\"text-white font-bold pt-2\">\n              POUR DES CONCESSIONAIRES AUTOMOBILES DU QUÉBEC\n            </p>\n          </div>\n\n          <div>\n            <p className=\"text-white text-sm max-w-lg pt-10 pb-14\">\n              A small team of people driven by performance and excellence. Lorem\n              ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus.\n              Suspendisse lectus tortor, dignissim sit amet, adipiscing nec,\n              ultricies sed, dolor. Cras elementum ultrices diam. Maecenas\n              ligula massa, varius a, semper congue, euismod non, mi.\n            </p>\n\n            <Link to=\"/demo\">\n              <span className=\" border-[1px] px-4 py-3 border-white rounded-full font-bold text-white transition duration-300 ease-in-out hover:bg-white hover:text-black\">\n                DEMANDER UNE DÉMO\n              </span>\n            </Link>\n\n            <div className=\"hidden mt-16 rounded-xl bg-gray-600 w-[21rem] mx-auto h-[1px] lg:block\"></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Rapide;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Syndication = () => {\n  return (\n    <section className=\"overflow-y-hidden bg-gradient-to-t from-[#30F9FC] to-lime-300\">\n      <div className=\"flex flex-col text-neutral-700 items-center\">\n        <div className=\"flex flex-col gap-10 items-center px-10 lg:flex-row\">\n          <div data-aos=\"fade-up\" data-aos-duration=\"1000\">\n            <StaticImage src=\"../images/Mockup.webp\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col gap-4 pb-6 lg:pt-6 \">\n            <h2 className=\"flex flex-col\">\n              <span className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n                INTÉGRATION\n              </span>\n              <span className=\"text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n                SYNDICATION\n              </span>\n            </h2>\n\n            <ul className=\"flex flex-col  list-disc ml-6 md:gap-10 lg:py-4 lg:pl-10\">\n              <li>\n                <span className=\"font-bold\">Facebook</span> <br />{\" \"}\n                <span>(Carroussel et Marketplace)</span>\n              </li>\n              <li>\n                <span className=\"font-bold\">Canadian Black Book</span> <br />\n                (Évaluation de vehicule d'echange)\n              </li>\n              <li>\n                <span className=\"font-bold\">DealerCorp</span>\n                <br /> <span>(Gestionaire d'inventaire)</span>\n              </li>\n            </ul>\n\n            <p>\n              Vous voulez ajouter une Syndication? <br />\n              Écrivez-nous et nous l'ajouterons!\n            </p>\n\n            <Link className=\"mt-10\" to=\"/\">\n              <span className=\"px-4 py-3 border-neutral-700 border-[1px] rounded-full font-bold text-neutral-700 transition duration-300 ease-in-out hover:bg-neutral-700 hover:text-white\">\n                DEMANDER UNE DÉMO\n              </span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Syndication;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Automatisation = () => {\n  return (\n    <section className=\"py-6\">\n      <div className=\"flex flex-col items-center max-w-7xl mx-auto\">\n        <h1\n          data-aos=\"fade-up\"\n          className=\"text-center py-6 text-2xl font-bold  md:text-5xl lg:text-6xl\"\n        >\n          <span className=\"bg-clip-text py-2 text-transparent bg-gradient-to-r from-[#30F9FC] to-lime-300\">\n            AUTOMATISATION DES STRATÉGIES MARKETING/ PARTENAIRE MARKETING\n            LEADSTREAM\n          </span>\n        </h1>\n        <div className=\"flex flex-col gap-10 items-center p-10 md:flex-row\">\n          <div className=\"relative\">\n            <div data-aos=\"fade-in\" data-aos-duration=\"1000\">\n              <div className=\"absolute -z-10 translate-y-[1rem] translate-x-[-1rem] h-full w-full  bg-gradient-to-t from-[#30F9FC] to-lime-300\"></div>{\" \"}\n            </div>\n            <StaticImage src=\"../images/bureau.webp\" alt=\"travail\" />\n          </div>\n\n          <div className=\"flex flex-col text-neutral-700 gap-4 pl-10 py-6\">\n            <h2 className=\"flex flex-col\">\n              <span className=\"max-w-lg text-lg font-bold sm:text-2xl md:text-3xl lg:text-4xl\">\n                NOS SITES WEB GÉNÈRENT DES FEEDS POUR LE GOOGLE MERCHANT CENTER\n              </span>\n            </h2>\n            <p className=\"max-w-lg\">\n              Nos services de marketing seront offerts en partenariat avec\n              l'agence Leadstream.\n            </p>\n\n            <ul className=\"list-disc font-bold ml-6\">\n              <li>Campagne Facebook et Google Ads</li>\n              <li>Référencement et rédaction de contenus</li>\n              <li>Conseils et stratégies de marketing</li>\n            </ul>\n\n            <Link\n              to=\"/\"\n              className=\"flex group btn items-center mr-auto mt-4 text-neutral-700 border-[1px] border-neutral-700 rounded-full transition duration-300 ease-in-out hover:bg-neutral-700 hover:text-white\"\n            >\n              <span className=\" px-4 py-2  font-bold \">COMMENCER</span>\n              <svg\n                viewBox=\"0 0 46 16\"\n                xmlns=\"http://www.w3.org/2000svg\"\n                className=\"-translate-x-2 h-[10px] w-[30px] fill-neutral-700 transition-all duration-300 ease-out group-hover:scale-x-105 group-hover:fill-white\"\n              >\n                <path\n                  transform=\"translate(30)\"\n                  d=\"M8,0,6.545,1.455l5.506,5.506H-30V9.039H12.052L6.545,14.545,8,16l8-8Z\"\n                  data-name=\"Path 10\"\n                ></path>\n              </svg>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Automatisation;\n","import * as React from \"react\";\nimport \"aos/dist/aos.css\";\nimport AOS from \"aos\";\nimport { useEffect } from \"react\";\nimport Divider from \"../components/Divider\";\nimport Dividerleft from \"../components/Dividerleft\";\nimport Dividerleftthree from \"../components/Dividerleftthree\";\nimport Dividerlefttwo from \"../components/Dividerlefttwo\";\nimport Dividerright from \"../components/Dividerright\";\nimport Dividerrightthree from \"../components/Dividerrightthree\";\nimport Dividerrighttwo from \"../components/Dividerrighttwo\";\nimport Experience from \"../components/Experience\";\nimport Contact from \"../components/Contact\";\nimport Footer from \"../components/Footer\";\nimport Hero from \"../components/Hero\";\nimport Integration from \"../components/Integration\";\nimport Integre from \"../components/Integre\";\nimport Layout from \"../components/layout\";\nimport Produits from \"../components/Produits\";\nimport Rapide from \"../components/Rapide\";\nimport Seo from \"../components/seo\";\nimport Syndication from \"../components/Syndication\";\nimport Automatisation from \"../components/Automatisation\";\nimport Header from \"../components/Header\";\n\nconst IndexPage = () => {\n  useEffect(() => {\n    AOS.init();\n    AOS.refresh();\n  }, []);\n\n  return (\n    <Layout>\n      <Header backgroundColor=\"bg-lime-300\" />\n      <Hero />\n      <Divider />\n      <Rapide />\n      <Produits />\n      <Dividerleft />\n      <Integration />\n      <Dividerright />\n      <Experience />\n      <Dividerlefttwo />\n      <Integre />\n      <Dividerrighttwo />\n      <Syndication />\n      <Dividerrightthree />\n      <Automatisation />\n      <Dividerleftthree />\n      <Contact />\n      <Footer />\n    </Layout>\n  );\n};\n\nexport const Head = () => <Seo title=\"Home\" />;\n\nexport default IndexPage;\n"],"names":["height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","srcSet","decoding","undefined","fallback","t","s","sizes","Image","length","map","media","type","key","fallbackImage","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","as","className","class","preactClass","onStartLoad","onLoad","onError","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__imageData","imageData","__error","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","Link","to","viewBox","xmlns","id","transform","d","S","Head","title","AOS","Header","Dividerleftthree","Contact","Footer"],"sourceRoot":""}